{"version":3,"sources":["redux/actions.js","Components/SubmitForm.js","Components/TodoItem.js","Components/TodoList.js","App.js","reportWebVitals.js","redux/states.js","redux/reducer.js","redux/store.js","index.js"],"names":["ADD_TODO","DELETE_TODO","UPDATE_TODO","useStyles","makeStyles","theme","root","margin","spacing","width","SubmitForm","todo","classes","useState","name","setName","dispatch","useDispatch","className","CssBaseline","Container","noValidate","autoComplete","Grid","container","direction","alignItems","wrap","TextField","id","label","variant","onChange","e","target","value","item","Button","onClick","type","payload","addTodo","uuid","color","size","mx","TodoItem","editable","setEditable","xs","Checkbox","inputProps","updateTodo","button","startIcon","todoid","TodoList","todos","useSelector","state","bgcolor","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","action","filter","store","combineReducers","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7429a38e.chunk.js","sourcesContent":["export let ADD_TODO = \"addTodo\";\r\nexport let DELETE_TODO =\"deleteTodo\";\r\nexport let UPDATE_TODO =\"updateTodo\";\r\n\r\nexport  function addTodo(todo) {\r\n\r\n    return{\r\n        type: ADD_TODO,\r\n        payload: todo ,\r\n    }\r\n    \r\n};\r\n\r\n\r\n\r\nexport  function deleteTodo(todoid) {\r\n\r\n    return{\r\n        type: DELETE_TODO,\r\n        payload: todoid ,\r\n    }\r\n    \r\n};\r\nexport  function updateTodo(todo) {\r\n\r\n    return{\r\n        type: UPDATE_TODO,\r\n        payload: todo ,\r\n    }\r\n    \r\n};","\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Add from \"@material-ui/icons/Add\";\r\nimport '../App.css';\r\nimport  { useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport {addTodo } from \"../redux/actions\";\r\nimport { v1 as uuid} from \"uuid\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(3),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction SubmitForm(todo) {\r\n  \r\n    const classes = useStyles();\r\n    const [name, setName] = useState();\r\n    let  dispatch = useDispatch();\r\n    \r\n    \r\n\r\n    return (\r\n      <div className=\"Submit-Form\">\r\n         <CssBaseline />\r\n        <Container >\r\n        <form className={classes.root} margin=\"dense\" noValidate autoComplete=\"off\">\r\n        <Grid container direction=\"row\" alignItems=\"center\" wrap=\"nowrap\">\r\n    \r\n      \r\n    <TextField id=\"outlined-basic\"  label=\"Outlined\" variant=\"outlined\" onChange={(e) => setName(e.target.value)} value={name} />\r\n  \r\n    <Grid item>\r\n    <Button \r\n    onClick = {() =>{ \r\n      dispatch\r\n     (addTodo({\r\n                id:uuid(),\r\n                name: name,\r\n   \r\n              }));\r\n            setName('');\r\n            }}\r\n    variant=\"contained\"\r\n     color=\"primary\"\r\n      size=\"large\" \r\n       mx=\"auto\">\r\n         \r\n    <Add />  Add\r\n          \r\n        </Button>\r\n    </Grid>\r\n  </Grid>\r\n       \r\n        \r\n       \r\n        \r\n      </form>\r\n        </Container>\r\n         \r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default SubmitForm;","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteTodo, updateTodo } from '../redux/actions';\r\nimport { useState } from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(3),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function TodoItem({todo}) {\r\n  \r\n \r\n\r\n    const classes = useStyles();\r\n    let dispatch = useDispatch();\r\n    let [editable, setEditable] = useState(false);\r\n    let [name, setName] = useState(todo.name);\r\n   \r\n    return (\r\n        <div>\r\n            \r\n           \r\n        <div className=\"row\">\r\n        <Grid container spacing ={3}  wrap=\"nowrap\"   >\r\n          <Grid item xs={3}>\r\n        <Checkbox inputProps={{ 'aria-label': 'uncontrolled-checkbox' } } wrap=\"wrap\"  />\r\n        </Grid>\r\n           <Grid item xs= {3}>\r\n             {editable? <TextField  value={name} onChange={(e) => setName(e.target.value)} />  : <h2>{todo.name}</h2> }\r\n          \r\n           </Grid>\r\n           <Grid item xs= {3}>\r\n           <Button \r\n         onClick = {() => {\r\n           dispatch(updateTodo(\r\n             {\r\n               ...todo,\r\n               name:name,\r\n             }\r\n           ));\r\n          if (editable) {\r\n            setName(todo.name);\r\n          }\r\n            setEditable (!editable);\r\n             \r\n        }}\r\n       \r\n           mx=\"auto\"  variant=\"contained\" \r\n        color=\"Primary\"\r\n        className={classes.button}\r\n        startIcon={<Edit />}\r\n         >{editable?\"Update\": \"Edit\" }</Button>\r\n         </Grid>\r\n         <Grid item xs= {3}>\r\n            <Button\r\n            onClick = {() => dispatch(deleteTodo(todo.id))}\r\n            variant=\"contained\"\r\n        color=\"secondary\"\r\n        className={classes.button}\r\n        startIcon={<DeleteIcon />}>  Delete </Button>\r\n        </Grid>\r\n        </Grid>\r\n        </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport TodoItem from './TodoItem'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\n\r\n\r\nexport default function TodoList() {\r\n   // const todos = useSelector(state => state.reducer.todos);\r\n    let todos = useSelector(state => state);\r\n    return (\r\n        <div>\r\n\r\n<Grid   bgcolor=\"info.main\"   >\r\n\r\n{todos.map(\r\n    todo => {\r\n        return <TodoItem key ={todo.id} todo= { todo } />\r\n    }\r\n)}\r\n     \r\n      </Grid>\r\n\r\n      \r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\n\nimport SubmitForm from \"./Components/SubmitForm\";\nimport TodoList from \"./Components/TodoList\";\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <h1>ToDoList</h1>\n      \n  <SubmitForm/>\n  <TodoList/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export let todos = [\r\n    {\r\n        id: 1,\r\n        name:\"one\",\r\n\r\n    },\r\n    {\r\n        id: 2,\r\n        name:\"two\",\r\n\r\n    },\r\n    {\r\n        id: 3,\r\n        name:\"three\",\r\n\r\n    },\r\n   \r\n]","import {ADD_TODO, UPDATE_TODO, DELETE_TODO } from \"./actions\";\r\nimport { todos } from \"./states\";\r\n\r\nexport let reducer = (state = todos  , action) => {\r\n    let newTodos;\r\n    switch (action.type) {\r\n       \r\n        case ADD_TODO:\r\n        return [...state, action.payload];\r\n         \r\n         case DELETE_TODO:\r\n         newTodos = [...state];\r\n         newTodos = newTodos.filter(todo => todo.id !== action.payload)\r\n         return newTodos;\r\n         \r\n         case UPDATE_TODO : {\r\n            return state.map(todo => todo.id === action.payload.id ? {...todo, name: action.payload.name}: todo)\r\n          }\r\n\r\n   \r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}       ","import {createStore, combineReducers } from \"redux\";\r\nimport {reducer} from \"./reducer\";\r\n\r\n\r\nexport default combineReducers({\r\n    reducer : reducer\r\n  })\r\nexport let store = createStore(reducer);\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store} from \"../src/redux/store\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n    <App /> \n    </Provider>\n   \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}